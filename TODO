DESIRED FEATURES:

* save canvas to png (or notebooks)
* erase content
* implement brushes
* undo / redo
* hideable toolbars
* variable stroke width (button that allows 3 widths + pressure sensitive)
* draw icons (instead of text)
* draw to canvas using wacom input
* hw buttons should be bound to actions
* add launcher from button press so app can be launched / quit
* add polished interactions

DRAWING:

* draw bezier curves (instead of line) between consecutive points

EVENTS:

* handle eraser (stylus)
* handle multi touch events


APP:

* add scenes for layering
* add left side toolbar
* make UI for simple app with buttons
* implement dialogs
* implement pop-over for buttons (Select / Dropdown button)
* implement brushes
  * sketchy
  * shaded
  * chrome
  * eraser


TESTING:

* write simple app that draws a circle, rect or point when there are touch events

PERF:

* investigate dirty rectangles
* minimize amount of memory needed for undo/redo

DEV EXPERIENCE:

* have main app call viewer? (optional)

DONE:

x draw to framebuffer
x refresh framebuffer
x listen for touch events
x listen for stylus events
x listen for button presses
x tool to view the framebuffer contents from the desktop/outside tty1
x smart refresh that responds immediately to drawing
x draw text to canvas
x handle button presses
x write Text class
x write Button class: draw text + outline + handle input events
x write Canvas class (low pri?)
x use shared\_ptr and unique\_ptr instead of raw pointers
x only draw when the stylus is touching tablet
x draw a line between consecutive mouse points (aka convert pixels into contours)
